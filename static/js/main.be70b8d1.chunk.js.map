{"version":3,"sources":["environ/appContext.js","Percentage.js","useValidation.js","ErrorMsg.js","Form.js","Counter.js","environ/ContextProvider.js","App.js","index.js"],"names":["appContext","React","createContext","scoreObtainable","setScoreObtainable","scoreObtained","setScoreObtained","errorMsg","setErrorMsg","Percentage","useContext","isNaN","useValidNumber","percentageScore","Math","round","ErrorMsg","Form","className","type","id","onChange","e","Number","target","value","Counter","ContextProvider","children","useState","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEaA,G,WAAaC,IAAMC,cAAc,CAC5CC,gBAAiB,KACjBC,mBAAoB,aACpBC,cAAe,KACfC,iBAAkB,aAClBC,SAAU,KACVC,YAAa,gB,WCJA,SAASC,IACtB,MAAqDC,qBAAWV,GAAxDK,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,gBAAiBI,EAAxC,EAAwCA,UCFnC,SAAwBF,EAAeF,GAC5C,IAAOK,EAAeE,qBAAWV,GAA1BQ,YACHG,MAAMR,GACRK,EAAY,oCACHG,MAAMN,GACfG,EAAY,kCACHH,EAAgBF,GACzBK,EAAY,8DDJdI,CAAeP,EAAeF,GAC9B,IAAMU,EAAkBC,KAAKC,MAAOV,EAAgBF,EAAmB,KAEvE,OACE,gCACE,iCAAoB,KAAbI,GAAmBM,GAAwB,EAAE,wCACpD,4EETS,SAASG,IAEtB,OADqBN,qBAAWV,GAAxBO,SCAK,SAASU,IACtB,MAA6DP,qBAAWV,GAAhEI,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,iBAAiBE,EAA7C,EAA6CA,YAW7C,OACE,iCACE,sBAAMU,UAAU,gBAAhB,SACE,cAACF,EAAD,MAEF,uBACEG,KAAK,OACLC,GAAG,mBACHC,SAjBwB,SAACC,GAC7Bd,EAAY,IACZJ,EAAmBmB,OAAOD,EAAEE,OAAOC,WAiBjC,uBAAON,KAAK,OAAOC,GAAG,iBAAiBC,SAff,SAACC,GAC3Bd,EAAY,IACZF,EAAiBiB,OAAOD,EAAEE,OAAOC,cCRtB,SAASC,IACtB,OACE,sBAAKR,UAAU,oBAAf,UACE,cAACT,EAAD,IACA,cAACQ,EAAD,O,WCUSU,MAhBf,YAAwC,IAAbC,EAAY,EAAZA,SACzB,EAA8CC,mBAAS,MAAvD,mBAAO1B,EAAP,KAAwBC,EAAxB,KACA,EAA0CyB,mBAAS,MAAnD,mBAAOxB,EAAP,KAAsBC,EAAtB,KACA,EAAgCuB,mBAAS,MAAzC,mBAEMJ,EAAQ,CACZtB,kBACAC,qBACAC,gBACAC,mBACAC,SAPF,KAQEC,YARF,MAUA,OAAO,cAACR,EAAW8B,SAAZ,CAAqBL,MAAOA,EAA5B,SAAoCG,KCD9BG,MAXf,WACE,OACE,qBAAKb,UAAU,YAAf,SACE,eAAC,EAAD,WACE,iDACA,cAACQ,EAAD,UCJRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.be70b8d1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const appContext = React.createContext({\n  scoreObtainable: null,\n  setScoreObtainable: () => {},\n  scoreObtained: null,\n  setScoreObtained: () => { },\n  errorMsg: null,\n  setErrorMsg: () => {}\n});\n","import React, { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\nimport { useValidNumber } from \"./useValidation\";\n\nexport default function Percentage() {\n  const { scoreObtained, scoreObtainable, errorMsg } = useContext(appContext);\n  useValidNumber(scoreObtained, scoreObtainable)\n  const percentageScore = Math.round((scoreObtained / scoreObtainable) * 100);\n\n  return (\n    <div>\n      <span>{errorMsg === \"\" ? (percentageScore || 0) : 0}<span>%</span></span>\n      <span>percentage Of total Score to obtained</span>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\n\nexport function useValidNumber(scoreObtained, scoreObtainable) {\n  const {setErrorMsg} = useContext(appContext)\n  if (isNaN(scoreObtainable)) {\n    setErrorMsg('score obtainable is not a number')\n  } else if (isNaN(scoreObtained)) {\n    setErrorMsg('score obtained is not a number')\n  } else if (scoreObtained > scoreObtainable) {\n    setErrorMsg('score obtained should not be greater than score obtainable')\n  }\n}\n","import React, { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\n\nexport default function ErrorMsg() {\n  const { errorMsg } = useContext(appContext);\n  return errorMsg;\n}\n","import React, { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\nimport ErrorMsg from './ErrorMsg'\n\nexport default function Form() {\n  const { setScoreObtainable, setScoreObtained,setErrorMsg } = useContext(appContext);\n\n  const handleScoreObtainable = (e) => {\n    setErrorMsg(\"\")\n    setScoreObtainable(Number(e.target.value));\n  };\n  const handleScoreObtained = (e) => {\n    setErrorMsg(\"\")\n    setScoreObtained(Number(e.target.value));\n  };\n\n  return (\n    <form>\n      <span className=\"error-message\">\n        <ErrorMsg />\n      </span>\n      <input\n        type=\"text\"\n        id=\"score-obtainable\"\n        onChange={handleScoreObtainable}\n      />\n      <input type=\"text\" id=\"score-obtained\" onChange={handleScoreObtained} />\n    </form>\n  );\n}\n","import React from \"react\";\nimport Percentage from './Percentage'\nimport Form from './Form'\n\n\nexport default function Counter() {\n  return (\n    <div className=\"container-content\">\n      <Percentage />\n      <Form />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { appContext } from \"./appContext\";\n\nfunction ContextProvider({ children }) {\n  const [scoreObtainable, setScoreObtainable] = useState(null);\n  const [scoreObtained, setScoreObtained] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const value = {\n    scoreObtainable,\n    setScoreObtainable,\n    scoreObtained,\n    setScoreObtained,\n    errorMsg,\n    setErrorMsg\n  };\n  return <appContext.Provider value={value}>{children}</appContext.Provider>;\n}\n\nexport default ContextProvider;\n","import \"./App.css\";\nimport Counter from \"./Counter\";\nimport ContextProvider from \"./environ/ContextProvider\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ContextProvider>\n        <div>Zuri Training!</div>\n        <Counter />\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}