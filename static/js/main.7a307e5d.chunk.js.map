{"version":3,"sources":["environ/appContext.js","Percentage.js","ErrorMsg.js","Form.js","Counter.js","environ/ContextProvider.js","App.js","index.js"],"names":["appContext","React","createContext","scoreObtainable","setScoreObtainable","scoreObtained","setScoreObtained","errorMsg","setErrorMsg","Percentage","useContext","percentage","Math","round","useEffect","isNaN","className","id","ErrorMsg","Form","autoComplete","type","placeholder","onChange","e","Number","target","value","Counter","ContextProvider","children","useState","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEaA,G,WAAaC,IAAMC,cAAc,CAC5CC,gBAAiB,KACjBC,mBAAoB,aACpBC,cAAe,KACfC,iBAAkB,aAClBC,SAAU,KACVC,YAAa,gB,eCJA,SAASC,IACtB,MACEC,qBAAWV,GADLK,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,gBAAiBI,EAAxC,EAAwCA,SAAUC,EAAlD,EAAkDA,YAE5CG,EAAaC,KAAKC,MAAOR,EAAgBF,EAAmB,KAYlE,OAVAW,qBAAU,WACRN,EAAY,MACRO,MAAMZ,IAAoBY,MAAMV,GAClCG,EAAY,iBACHL,EAAkBE,GAE3BG,EAAY,kDAEb,CAACD,EAAUJ,EAAiBE,EAAeG,IAG5C,sBAAKQ,UAAU,qBAAf,UACE,uBAAMC,GAAG,aAAT,UAEgB,OAAbV,GAAoBI,GAAkB,EACvC,sBAAMM,GAAG,aAAT,kBAEF,0ECvBS,SAASC,IAEtB,OADqBR,qBAAWV,GAAxBO,S,MCCK,SAASY,IACtB,MACET,qBAAWV,GADLI,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,iBAAkBE,EAA9C,EAA8CA,YAY9C,OACE,uBAAMQ,UAAU,OAAOI,aAAa,MAApC,UACE,qBAAKJ,UAAU,gBAAf,SACE,+BACA,cAACE,EAAD,QAGF,uBACEG,KAAK,OACLC,YAAY,mBACZL,GAAG,mBACHM,SApBwB,SAACC,GAC7BhB,EAAY,MACZJ,EAAmBqB,OAAOD,EAAEE,OAAOC,WAoBjC,uBAAON,KAAK,OAAOJ,GAAG,iBAAiBK,YAAY,iBAAiBC,SAlB5C,SAACC,GAC3BhB,EAAY,MACZF,EAAiBmB,OAAOD,EAAEE,OAAOC,c,MCVtB,SAASC,IACtB,OACE,sBAAKZ,UAAU,oBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,O,WCUSa,MAhBf,YAAwC,IAAbC,EAAY,EAAZA,SACzB,EAA8CC,mBAAS,MAAvD,mBAAO5B,EAAP,KAAwBC,EAAxB,KACA,EAA0C2B,mBAAS,MAAnD,mBAAO1B,EAAP,KAAsBC,EAAtB,KACA,EAAgCyB,mBAAS,MAAzC,mBAEMJ,EAAQ,CACZxB,kBACAC,qBACAC,gBACAC,mBACAC,SAPF,KAQEC,YARF,MAUA,OAAO,cAACR,EAAWgC,SAAZ,CAAqBL,MAAOA,EAA5B,SAAoCG,KCC9BG,MAbf,WACE,OACE,qBAAKjB,UAAU,YAAf,SACE,eAAC,EAAD,WACE,qBAAKA,UAAU,YAAf,2BACA,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,YCLVkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a307e5d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const appContext = React.createContext({\n  scoreObtainable: null,\n  setScoreObtainable: () => {},\n  scoreObtained: null,\n  setScoreObtained: () => { },\n  errorMsg: null,\n  setErrorMsg: () => {}\n});\n","import React, { useContext, useEffect } from \"react\";\nimport { appContext } from \"./environ/appContext\";\nimport './Percentage.css'\n\nexport default function Percentage() {\n  const { scoreObtained, scoreObtainable, errorMsg, setErrorMsg } =\n    useContext(appContext);\n  const percentage = Math.round((scoreObtained / scoreObtainable) * 100);\n\n  useEffect(() => {\n    setErrorMsg(null);\n    if (isNaN(scoreObtainable) || isNaN(scoreObtained)) {\n      setErrorMsg(\"invalid input\");\n    } else if (scoreObtainable < scoreObtained) {\n      //solve infinity case\n      setErrorMsg(\"score obtainable is less than score obtained\");\n    }\n  }, [errorMsg, scoreObtainable, scoreObtained, setErrorMsg]);\n\n  return (\n    <div className=\"percentage-wrapper\">\n      <span id=\"score-body\">\n        {/* if error message is on display, result is invalid. Dont show */}\n        {errorMsg === null ? percentage || 0 : 0}\n        <span id=\"score-sign\">%</span>\n      </span>\n      <label>percentage Of total score obtained</label>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\n\nexport default function ErrorMsg() {\n  const { errorMsg } = useContext(appContext);\n  return errorMsg;\n}\n","import React, { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport './Form.css'\n\nexport default function Form() {\n  const { setScoreObtainable, setScoreObtained, setErrorMsg } =\n    useContext(appContext);\n\n  const handleScoreObtainable = (e) => {\n    setErrorMsg(null);\n    setScoreObtainable(Number(e.target.value));\n  };\n  const handleScoreObtained = (e) => {\n    setErrorMsg(null);\n    setScoreObtained(Number(e.target.value));\n  };\n\n  return (\n    <form className=\"form\" autoComplete=\"off\">\n      <div className=\"error-message\">\n        <span>\n        <ErrorMsg />\n      </span>\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"score obtainable\"\n        id=\"score-obtainable\"\n        onChange={handleScoreObtainable}\n      />\n      <input type=\"text\" id=\"score-obtained\" placeholder=\"score obtained\" onChange={handleScoreObtained} />\n    </form>\n  );\n}\n","import React from \"react\";\nimport Percentage from \"./Percentage\";\nimport Form from \"./Form\";\nimport \"./Counter.css\";\n\nexport default function Counter() {\n  return (\n    <div className=\"container-content\">\n      <Percentage />\n      <Form />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { appContext } from \"./appContext\";\n\nfunction ContextProvider({ children }) {\n  const [scoreObtainable, setScoreObtainable] = useState(null);\n  const [scoreObtained, setScoreObtained] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const value = {\n    scoreObtainable,\n    setScoreObtainable,\n    scoreObtained,\n    setScoreObtained,\n    errorMsg,\n    setErrorMsg\n  };\n  return <appContext.Provider value={value}>{children}</appContext.Provider>;\n}\n\nexport default ContextProvider;\n","import \"./App.css\";\nimport Counter from \"./Counter\";\nimport ContextProvider from \"./environ/ContextProvider\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ContextProvider>\n        <div className=\"zuri-head\">Zuri Training</div>\n        <div className=\"zuri-body\">\n          <Counter />\n        </div>\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}