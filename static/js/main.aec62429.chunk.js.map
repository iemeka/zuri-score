{"version":3,"sources":["environ/appContext.js","Percentage.js","ErrorMsg.js","Form.js","Counter.js","environ/ContextProvider.js","App.js","index.js"],"names":["appContext","React","createContext","scoreObtainable","setScoreObtainable","scoreObtained","setScoreObtained","errorMsg","setErrorMsg","Percentage","useContext","percentage","Math","round","useEffect","isNaN","ErrorMsg","Form","className","type","id","onChange","e","Number","target","value","Counter","ContextProvider","children","useState","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEaA,G,WAAaC,IAAMC,cAAc,CAC5CC,gBAAiB,KACjBC,mBAAoB,aACpBC,cAAe,KACfC,iBAAkB,aAClBC,SAAU,KACVC,YAAa,gB,OCLA,SAASC,IACtB,MACEC,qBAAWV,GADLK,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,gBAAiBI,EAAxC,EAAwCA,SAAUC,EAAlD,EAAkDA,YAE5CG,EAAaC,KAAKC,MAAOR,EAAgBF,EAAmB,KAWlE,OATAW,qBAAU,WACRN,EAAY,MACRO,MAAMZ,IAAoBY,MAAMV,GAClCG,EAAY,iBACHL,EAAkBE,GAC3BG,EAAY,4DAEb,CAACD,EAAUJ,EAAiBE,EAAeG,IAG5C,gCACE,iCAEgB,OAAbD,GAAqBI,GAAmB,EACzC,wCAEF,4ECrBS,SAASK,IAEtB,OADqBN,qBAAWV,GAAxBO,SCAK,SAASU,IACtB,MACEP,qBAAWV,GADLI,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,iBAAkBE,EAA9C,EAA8CA,YAY9C,OACE,iCACE,sBAAMU,UAAU,gBAAhB,SACE,cAACF,EAAD,MAEF,uBACEG,KAAK,OACLC,GAAG,mBACHC,SAjBwB,SAACC,GAC7Bd,EAAY,MACZJ,EAAmBmB,OAAOD,EAAEE,OAAOC,WAiBjC,uBAAON,KAAK,OAAOC,GAAG,iBAAiBC,SAff,SAACC,GAC3Bd,EAAY,MACZF,EAAiBiB,OAAOD,EAAEE,OAAOC,cCTtB,SAASC,IACtB,OACE,sBAAKR,UAAU,oBAAf,UACE,cAACT,EAAD,IACA,cAACQ,EAAD,O,WCUSU,MAhBf,YAAwC,IAAbC,EAAY,EAAZA,SACzB,EAA8CC,mBAAS,MAAvD,mBAAO1B,EAAP,KAAwBC,EAAxB,KACA,EAA0CyB,mBAAS,MAAnD,mBAAOxB,EAAP,KAAsBC,EAAtB,KACA,EAAgCuB,mBAAS,MAAzC,mBAEMJ,EAAQ,CACZtB,kBACAC,qBACAC,gBACAC,mBACAC,SAPF,KAQEC,YARF,MAUA,OAAO,cAACR,EAAW8B,SAAZ,CAAqBL,MAAOA,EAA5B,SAAoCG,KCD9BG,MAXf,WACE,OACE,qBAAKb,UAAU,YAAf,SACE,eAAC,EAAD,WACE,iDACA,cAACQ,EAAD,UCJRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.aec62429.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const appContext = React.createContext({\n  scoreObtainable: null,\n  setScoreObtainable: () => {},\n  scoreObtained: null,\n  setScoreObtained: () => { },\n  errorMsg: null,\n  setErrorMsg: () => {}\n});\n","import React, { useContext, useEffect } from \"react\";\nimport { appContext } from \"./environ/appContext\";\n\nexport default function Percentage() {\n  const { scoreObtained, scoreObtainable, errorMsg, setErrorMsg } =\n    useContext(appContext);\n  const percentage = Math.round((scoreObtained / scoreObtainable) * 100);\n\n  useEffect(() => {\n    setErrorMsg(null);\n    if (isNaN(scoreObtainable) || isNaN(scoreObtained)) {\n      setErrorMsg(\"invalid input\");\n    } else if (scoreObtainable < scoreObtained) { //solve infinity case\n      setErrorMsg(\"score obtainable should be greater than score obtained\");\n    } \n  }, [errorMsg, scoreObtainable, scoreObtained, setErrorMsg]);\n\n  return (\n    <div>\n      <span>\n        {/* if error message is on display, result is invalid. Dont show */}\n        {errorMsg === null ? (percentage || 0) : 0} \n        <span>%</span>\n      </span>\n      <span>percentage Of total Score to obtained</span>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\n\nexport default function ErrorMsg() {\n  const { errorMsg } = useContext(appContext);\n  return errorMsg;\n}\n","import React, { useContext } from \"react\";\nimport { appContext } from \"./environ/appContext\";\nimport ErrorMsg from \"./ErrorMsg\";\n\nexport default function Form() {\n  const { setScoreObtainable, setScoreObtained, setErrorMsg } =\n    useContext(appContext);\n\n  const handleScoreObtainable = (e) => {\n    setErrorMsg(null);\n    setScoreObtainable(Number(e.target.value));\n  };\n  const handleScoreObtained = (e) => {\n    setErrorMsg(null);\n    setScoreObtained(Number(e.target.value));\n  };\n\n  return (\n    <form>\n      <span className=\"error-message\">\n        <ErrorMsg />\n      </span>\n      <input\n        type=\"text\"\n        id=\"score-obtainable\"\n        onChange={handleScoreObtainable}\n      />\n      <input type=\"text\" id=\"score-obtained\" onChange={handleScoreObtained} />\n    </form>\n  );\n}\n","import React from \"react\";\nimport Percentage from './Percentage'\nimport Form from './Form'\n\n\nexport default function Counter() {\n  return (\n    <div className=\"container-content\">\n      <Percentage />\n      <Form />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { appContext } from \"./appContext\";\n\nfunction ContextProvider({ children }) {\n  const [scoreObtainable, setScoreObtainable] = useState(null);\n  const [scoreObtained, setScoreObtained] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const value = {\n    scoreObtainable,\n    setScoreObtainable,\n    scoreObtained,\n    setScoreObtained,\n    errorMsg,\n    setErrorMsg\n  };\n  return <appContext.Provider value={value}>{children}</appContext.Provider>;\n}\n\nexport default ContextProvider;\n","import \"./App.css\";\nimport Counter from \"./Counter\";\nimport ContextProvider from \"./environ/ContextProvider\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ContextProvider>\n        <div>Zuri Training!</div>\n        <Counter />\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}